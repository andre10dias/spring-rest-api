services:
  db:
    image: mysql:9.1.0
    container_name: mysql_prod
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      MYSQL_DATABASE: spring_rest_api
    ports:
      - "3308:3306"
    expose:
      - 3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring_rest_api_network

  spring-rest-api:
    image: andre10dias/spring-rest-api
    build:     # Remova o build para baixar a imagem do seu repositório no docker hub, caso já exista
      context: ./spring-rest-api
      dockerfile: Dockerfile
    container_name: spring_rest_api_app
    restart: always
    working_dir: /spring-rest-api
    environment:
      TZ: America/Sao_Paulo
      SPRING.DATASOURCE.URL: jdbc:mysql://db:3306/spring_rest_api?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING.USERNAME: docker
      SPRING.PASSWORD: docker
      SPRING_PROFILES_ACTIVE: docker
    command: mvn spring-boot:run
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - spring_rest_api_network

  portainer:   # Monitoramento dos containers
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    networks:
      - spring_rest_api_network

volumes:
  portainer_data:

networks:
  spring_rest_api_network:
    driver: bridge
